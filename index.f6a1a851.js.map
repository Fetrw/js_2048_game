{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$INITIAL_STATE = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.initialState = initialState || $3d28d7f1aac198f5$var$INITIAL_STATE;\n        this.state = this.copyState(this.initialState);\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"copyState\",\n            value: function copyState(state) {\n                return state.map(function(row) {\n                    return row.slice();\n                });\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                this.addRandomTile();\n                this.addRandomTile();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.state = this.copyState(this.initialState);\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                for(var row = 0; row < 4; row++){\n                    var currentRow = this.state[row];\n                    var newRow = this.slide(currentRow);\n                    if (!this.arraysEqual(currentRow, newRow)) {\n                        this.state[row] = newRow;\n                        moved = true;\n                    }\n                }\n                if (moved) {\n                    this.addRandomTile();\n                    this.checkGameStatus();\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                for(var row = 0; row < 4; row++){\n                    var currentRow = this.state[row];\n                    var reversedRow = currentRow.slice().reverse();\n                    var newRow = this.slide(reversedRow).reverse();\n                    if (!this.arraysEqual(currentRow, newRow)) {\n                        this.state[row] = newRow;\n                        moved = true;\n                    }\n                }\n                if (moved) {\n                    this.addRandomTile();\n                    this.checkGameStatus();\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this, _loop = function(col) {\n                    var currentCol = _this.state.map(function(row) {\n                        return row[col];\n                    });\n                    var newCol = _this.slide(currentCol);\n                    if (!_this.arraysEqual(currentCol, newCol)) {\n                        for(var row = 0; row < 4; row++)_this.state[row][col] = newCol[row];\n                        moved = true;\n                    }\n                };\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                for(var col = 0; col < 4; col++)_loop(col);\n                if (moved) {\n                    this.addRandomTile();\n                    this.checkGameStatus();\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this, _loop = function(col) {\n                    var currentCol = _this.state.map(function(row) {\n                        return row[col];\n                    });\n                    var reversedCol = currentCol.slice().reverse();\n                    var newCol = _this.slide(reversedCol).reverse();\n                    if (!_this.arraysEqual(currentCol, newCol)) {\n                        for(var row = 0; row < 4; row++)_this.state[row][col] = newCol[row];\n                        moved = true;\n                    }\n                };\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                for(var col = 0; col < 4; col++)_loop(col);\n                if (moved) {\n                    this.addRandomTile();\n                    this.checkGameStatus();\n                }\n            }\n        },\n        {\n            key: \"slide\",\n            value: function slide(row) {\n                var nonZero = row.filter(function(val) {\n                    return val !== 0;\n                });\n                var merged = [];\n                for(var i = 0; i < nonZero.length; i++)if (nonZero[i] === nonZero[i + 1]) {\n                    merged.push(nonZero[i] * 2);\n                    this.score += nonZero[i] * 2;\n                    i++;\n                } else merged.push(nonZero[i]);\n                while(merged.length < 4)merged.push(0);\n                return merged;\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCells = [];\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.state[row][col] === 0) emptyCells.push({\n                        row: row,\n                        col: col\n                    });\n                }\n                if (emptyCells.length > 0) {\n                    var randomIndex = Math.floor(Math.random() * emptyCells.length);\n                    var _emptyCells_randomIndex = emptyCells[randomIndex], row1 = _emptyCells_randomIndex.row, col1 = _emptyCells_randomIndex.col;\n                    this.state[row1][col1] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"arraysEqual\",\n            value: function arraysEqual(arr1, arr2) {\n                if (arr1.length !== arr2.length) return false;\n                for(var i = 0; i < arr1.length; i++){\n                    if (arr1[i] !== arr2[i]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"checkGameStatus\",\n            value: function checkGameStatus() {\n                if (this.state.flat().includes(2048)) {\n                    this.status = \"win\";\n                    return;\n                }\n                var hasEmptyCells = this.state.flat().includes(0);\n                var canMerge = this.canMerge();\n                if (!hasEmptyCells && !canMerge) this.status = \"lose\";\n            }\n        },\n        {\n            key: \"canMerge\",\n            value: function canMerge() {\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    var current = this.state[row][col];\n                    if (current === 0) continue;\n                    if (col < 3 && current === this.state[row][col + 1]) return true;\n                    if (row < 3 && current === this.state[row + 1][col]) return true;\n                }\n                return false;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$gameField = document.querySelector(\".game-field\");\nvar $197cd56b15c33885$var$scoreElement = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$messageContainer = document.querySelector(\".message-container\");\nvar $197cd56b15c33885$var$messageElements = {\n    lose: document.querySelector(\".message-lose\"),\n    win: document.querySelector(\".message-win\"),\n    start: document.querySelector(\".message-start\")\n};\nfunction $197cd56b15c33885$var$updateUI() {\n    var state = $197cd56b15c33885$var$game.getState();\n    var score = $197cd56b15c33885$var$game.getScore();\n    var currentStatus = $197cd56b15c33885$var$game.getStatus();\n    $197cd56b15c33885$var$scoreElement.textContent = score;\n    $197cd56b15c33885$var$gameField.querySelectorAll(\".field-row\").forEach(function(row, rowIndex) {\n        row.querySelectorAll(\".field-cell\").forEach(function(cell, colIndex) {\n            cell.textContent = state[rowIndex][colIndex] || \"\";\n            cell.className = \"field-cell \".concat(state[rowIndex][colIndex] ? \"field-cell--\".concat(state[rowIndex][colIndex]) : \"\");\n        });\n    });\n    $197cd56b15c33885$var$messageContainer.querySelectorAll(\".message\").forEach(function(message) {\n        return message.classList.add(\"hidden\");\n    });\n    if (currentStatus === \"win\") $197cd56b15c33885$var$messageElements.win.classList.remove(\"hidden\");\n    else if (currentStatus === \"lose\") $197cd56b15c33885$var$messageElements.lose.classList.remove(\"hidden\");\n    else if (currentStatus === \"playing\") $197cd56b15c33885$var$messageElements.start.classList.add(\"hidden\");\n    else $197cd56b15c33885$var$messageElements.start.classList.remove(\"hidden\");\n}\nfunction $197cd56b15c33885$var$handleKeyPress(evt) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    switch(evt.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        default:\n            return;\n    }\n    $197cd56b15c33885$var$updateUI();\n}\nfunction $197cd56b15c33885$var$startGame() {\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n    $197cd56b15c33885$var$startButton.classList.remove(\"start\");\n    $197cd56b15c33885$var$startButton.classList.add(\"restart\");\n    $197cd56b15c33885$var$updateUI(); // Оновлюємо інтерфейс після зміни статусу\n}\nfunction $197cd56b15c33885$var$restartGame() {\n    $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$startButton.textContent = \"Start\";\n    $197cd56b15c33885$var$startButton.classList.remove(\"restart\");\n    $197cd56b15c33885$var$startButton.classList.add(\"start\");\n    $197cd56b15c33885$var$updateUI(); // Оновлюємо інтерфейс після скидання гри\n}\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$game.getStatus() === \"idle\") $197cd56b15c33885$var$startGame();\n    else $197cd56b15c33885$var$restartGame();\n});\ndocument.addEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyPress);\n$197cd56b15c33885$var$updateUI(); // Оновлюємо інтерфейс при завантаженні сторінки\n\n})();\n//# sourceMappingURL=index.f6a1a851.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst gameField = document.querySelector('.game-field');\nconst scoreElement = document.querySelector('.game-score');\nconst startButton = document.querySelector('.start');\nconst messageContainer = document.querySelector('.message-container');\nconst messageElements = {\n  lose: document.querySelector('.message-lose'),\n  win: document.querySelector('.message-win'),\n  start: document.querySelector('.message-start'),\n};\n\nfunction updateUI() {\n  const state = game.getState();\n  const score = game.getScore();\n  const currentStatus = game.getStatus();\n\n  scoreElement.textContent = score;\n\n  gameField.querySelectorAll('.field-row').forEach((row, rowIndex) => {\n    row.querySelectorAll('.field-cell').forEach((cell, colIndex) => {\n      cell.textContent = state[rowIndex][colIndex] || '';\n      cell.className = `field-cell ${state[rowIndex][colIndex] ? `field-cell--${state[rowIndex][colIndex]}` : ''}`;\n    });\n  });\n\n  messageContainer\n    .querySelectorAll('.message')\n    .forEach((message) => message.classList.add('hidden'));\n\n  if (currentStatus === 'win') {\n    messageElements.win.classList.remove('hidden');\n  } else if (currentStatus === 'lose') {\n    messageElements.lose.classList.remove('hidden');\n  } else if (currentStatus === 'playing') {\n    messageElements.start.classList.add('hidden');\n  } else {\n    messageElements.start.classList.remove('hidden');\n  }\n}\n\nfunction handleKeyPress(evt) {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  switch (evt.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    default:\n      return;\n  }\n  updateUI();\n}\n\nfunction startGame() {\n  game.start();\n  startButton.textContent = 'Restart';\n  startButton.classList.remove('start');\n  startButton.classList.add('restart');\n\n  updateUI(); // Оновлюємо інтерфейс після зміни статусу\n}\n\nfunction restartGame() {\n  game.restart();\n  startButton.textContent = 'Start';\n  startButton.classList.remove('restart');\n  startButton.classList.add('start');\n\n  updateUI(); // Оновлюємо інтерфейс після скидання гри\n}\n\nstartButton.addEventListener('click', () => {\n  if (game.getStatus() === 'idle') {\n    startGame();\n  } else {\n    restartGame();\n  }\n});\n\ndocument.addEventListener('keydown', handleKeyPress);\n\nupdateUI(); // Оновлюємо інтерфейс при завантаженні сторінки\n","'use strict';\n\nconst INITIAL_STATE = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nclass Game {\n  constructor(initialState) {\n    this.initialState = initialState || INITIAL_STATE;\n    this.state = this.copyState(this.initialState);\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  copyState(state) {\n    return state.map((row) => row.slice());\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = 'playing';\n    this.addRandomTile();\n    this.addRandomTile();\n  }\n\n  restart() {\n    this.state = this.copyState(this.initialState);\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  moveLeft() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (let row = 0; row < 4; row++) {\n      const currentRow = this.state[row];\n      const newRow = this.slide(currentRow);\n\n      if (!this.arraysEqual(currentRow, newRow)) {\n        this.state[row] = newRow;\n        moved = true;\n      }\n    }\n\n    if (moved) {\n      this.addRandomTile();\n      this.checkGameStatus();\n    }\n  }\n\n  moveRight() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (let row = 0; row < 4; row++) {\n      const currentRow = this.state[row];\n      const reversedRow = currentRow.slice().reverse();\n      const newRow = this.slide(reversedRow).reverse();\n\n      if (!this.arraysEqual(currentRow, newRow)) {\n        this.state[row] = newRow;\n        moved = true;\n      }\n    }\n\n    if (moved) {\n      this.addRandomTile();\n      this.checkGameStatus();\n    }\n  }\n\n  moveUp() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (let col = 0; col < 4; col++) {\n      const currentCol = this.state.map((row) => row[col]);\n      const newCol = this.slide(currentCol);\n\n      if (!this.arraysEqual(currentCol, newCol)) {\n        for (let row = 0; row < 4; row++) {\n          this.state[row][col] = newCol[row];\n        }\n        moved = true;\n      }\n    }\n\n    if (moved) {\n      this.addRandomTile();\n      this.checkGameStatus();\n    }\n  }\n\n  moveDown() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (let col = 0; col < 4; col++) {\n      const currentCol = this.state.map((row) => row[col]);\n      const reversedCol = currentCol.slice().reverse();\n      const newCol = this.slide(reversedCol).reverse();\n\n      if (!this.arraysEqual(currentCol, newCol)) {\n        for (let row = 0; row < 4; row++) {\n          this.state[row][col] = newCol[row];\n        }\n        moved = true;\n      }\n    }\n\n    if (moved) {\n      this.addRandomTile();\n      this.checkGameStatus();\n    }\n  }\n\n  slide(row) {\n    const nonZero = row.filter((val) => val !== 0);\n    const merged = [];\n\n    for (let i = 0; i < nonZero.length; i++) {\n      if (nonZero[i] === nonZero[i + 1]) {\n        merged.push(nonZero[i] * 2);\n        this.score += nonZero[i] * 2;\n        i++;\n      } else {\n        merged.push(nonZero[i]);\n      }\n    }\n\n    while (merged.length < 4) {\n      merged.push(0);\n    }\n\n    return merged;\n  }\n\n  addRandomTile() {\n    const emptyCells = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.state[row][col] === 0) {\n          emptyCells.push({ row, col });\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const randomIndex = Math.floor(Math.random() * emptyCells.length);\n      const { row, col } = emptyCells[randomIndex];\n\n      this.state[row][col] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  arraysEqual(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n      return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  checkGameStatus() {\n    if (this.state.flat().includes(2048)) {\n      this.status = 'win';\n\n      return;\n    }\n\n    const hasEmptyCells = this.state.flat().includes(0);\n    const canMerge = this.canMerge();\n\n    if (!hasEmptyCells && !canMerge) {\n      this.status = 'lose';\n    }\n  }\n\n  canMerge() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        const current = this.state[row][col];\n\n        if (current === 0) {\n          continue;\n        }\n\n        if (col < 3 && current === this.state[row][col + 1]) {\n          return true;\n        }\n\n        if (row < 3 && current === this.state[row + 1][col]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n"],"names":["$3d28d7f1aac198f5$var$INITIAL_STATE","$197cd56b15c33885$var$game","protoProps","Game","initialState","instance","Constructor","TypeError","state","copyState","score","status","key","value","map","row","slice","addRandomTile","moved","currentRow","newRow","slide","arraysEqual","checkGameStatus","reversedRow","reverse","_this","_loop","col","currentCol","newCol","reversedCol","nonZero","filter","val","merged","i","length","push","emptyCells","randomIndex","Math","floor","random","_emptyCells_randomIndex","row1","col1","arr1","arr2","flat","includes","hasEmptyCells","canMerge","current","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","prototype","$197cd56b15c33885$var$gameField","document","querySelector","$197cd56b15c33885$var$scoreElement","$197cd56b15c33885$var$startButton","$197cd56b15c33885$var$messageContainer","$197cd56b15c33885$var$messageElements","lose","win","start","$197cd56b15c33885$var$updateUI","getState","getScore","currentStatus","getStatus","textContent","querySelectorAll","forEach","rowIndex","cell","colIndex","className","concat","message","classList","add","remove","addEventListener","restart","evt","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.f6a1a851.js.map"}